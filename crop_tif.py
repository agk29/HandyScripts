# -*- coding: utf-8 -*-
"""
Created on Tue Apr 13 09:31:19 2021

@author: akenny

Functions for manipulating .tif files: crop to a chosen size and save as new file
"""

import rasterio
from rasterio.mask import mask
import rasterio.features, rasterio.warp

# Gets the coordinates of a tif file, then outputs the cropped coordinates
# filename: input tif path
# xd1, xd2, yd1, yd2: values between 0 and 1 to determine the crop size. Default is xd1,yd1=0 and xd2,yd2=1 to just get the coords of the tif and no cropping
def crop_coords(filename, xd1=0, xd2=1, yd1=0, yd2=1):
    with rasterio.open(filename) as dataset:
        mask = dataset.dataset_mask()
        for geom, val in rasterio.features.shapes(mask, transform=dataset.transform):
            print(geom)
            coords = geom['coordinates'][0]
            x1, x2 = coords[0][0], coords[2][0]
            y1, y2 = coords[0][1], coords[1][1]
            dx = abs(x2 - x1)
            dy = abs(y2 - y1)
            # create new coords
            nx1, nx2 = x1 + xd1*dx, x1 + xd2*dx
            ny1, ny2 = y1 - yd1*dy, y1 - yd2*dy
            # put them into the new coords, very specific format needed for rasterio mask
            new_geom = {}
            new_geom['type'] = 'Polygon'
            new_geom['coordinates'] = [[(nx1, ny1),
                                       (nx1, ny2),
                                       (nx2, ny2),
                                       (nx2, ny1),
                                       (nx1, ny1)]]
            new_coords = [new_geom]           
            return new_coords

# Saves an input tif as a new tif cropped to the chosen coordinates
# filename: input tif path, new_coords: crop coordinates generated by crop_coords(), out_tif: output tif path
def save_tif(filename, new_coords, out_tif):
    with rasterio.open(filename, "r") as dataset:
        out_img, out_transform = mask(dataset=dataset, shapes=new_coords, crop=True)
    out_meta = dataset.meta.copy()
    out_meta.update({"driver": "GTiff", "height": out_img.shape[1], "width": out_img.shape[2], "transform": out_transform, "crs": "+proj=utm +zone=35 +ellps=GRS80 +units=m +no_defs"})
    with rasterio.open(out_tif, "w", **out_meta) as dest:
        dest.write(out_img)